
name: Build and push Docker image

# Run this workflow on completed Build workflow
on:
  workflow_run:
    workflows:
      - Build
    types:
      - completed

jobs:
  docker-image:
    runs-on: ubuntu-latestgi
    env:
      # Registry to use
      REGISTRY: ghcr.io
      # github.repository as <account>/<repo>
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build Docker image metadata
        id: dockermeta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Generate Docker tags: edge for every commit on master, semver for every semantic tag
          tags: |
            type=edge,branch=master
            type=semver,pattern={{version}}

        # Two separate jobs so we don't have to deal with pathing w hen fetching them
      - name: Fetch PackSquash amd64 AppImage
        uses: dawidd6/action-download-artifact@v2
        # We use github token that also use to push images, since write:package includes public:repo
        with: 
          github_token: ${{ secrets.REGISTRY_TOKEN }}
          workflow: build.yml
          branch: master
          name: 'PackSquash CLI AppImage (x64)'

      - name: Fetch PackSquash arm64 AppImage
        uses: dawidd6/action-download-artifact@v2
        with: 
          github_token: ${{ secrets.REGISTRY_TOKEN }}
          workflow: build.yml
          branch: master
          name: 'PackSquash CLI AppImage (arm64)'
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          buildkitd-flags: --debug

      # We need a github token with write:package permission in reposiotry secret for this to work
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.dockermeta.outputs.tags }}
          labels: ${{ steps.dockermeta.outputs.labels }}
